/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.20
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_tst_WRAP_H_
#define SWIG_tst_WRAP_H_

class Swig::Director;


class SwigDirector_BaseTST : public tst<PyObject * >, public Swig::Director {

public:
    SwigDirector_BaseTST(PyObject *self, FILE *file, serializer<PyObject * > *reader, bool disown = false);
    SwigDirector_BaseTST(PyObject *self, int initial_size, PyObject *default_value, bool disown = false);
    virtual void put(char *string, PyObject *data);
};


class SwigDirector_Action : public action<PyObject * >, public Swig::Director {

public:
    SwigDirector_Action(PyObject* self, bool disown = false);
    virtual void perform(char *key, int remaining_distance, PyObject *data);
    virtual PyObject * result();
};


class SwigDirector_Filter : public filter<PyObject * >, public Swig::Director {

public:
    SwigDirector_Filter(PyObject* self, bool disown = false);
    virtual PyObject * perform(char *key, int remaining_distance, PyObject *data);
};


class SwigDirector_Serializer : public serializer<PyObject * >, public Swig::Director {

public:
    SwigDirector_Serializer(PyObject* self, bool disown = false);
    virtual void write(FILE *file, PyObject *data);
    virtual PyObject * read(FILE *file);
};


#endif
